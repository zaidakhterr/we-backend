service:
  name: we-backend

plugins:
  - serverless-plugin-existing-s3
  - serverless-offline
  - serverless-pseudo-parameters

custom:
  serverless-offline:
    httpPort: 4000

resources:
  Resources:
    UploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: we-project
        AccessControl: PublicRead
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - GET
                - PUT
                - POST
                - HEAD
              AllowedOrigins:
                - "*"
              AllowedHeaders:
                - "*"

provider:
  name: aws
  profile: nedian
  region: ap-south-1
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource: "arn:aws:s3:::we-project/*"
  package:
    exclude:
      - "node_modules/aws-sdk/**"

functions:
  hello:
    handler: src/handlers/index.hello
    events:
      - http:
          method: GET
          path: hello
          cors: true
  getSignedUrl:
    handler: src/handlers/index.getSignedUrl
    events:
      - http:
          method: POST
          path: getSignedUrl
          cors: true
  register:
    handler: src/handlers/index.register
    events:
      - http:
          method: POST
          path: register
          cors: true
  login:
    handler: src/handlers/index.login
    events:
      - http:
          method: POST
          path: login
          cors: true
  getUser:
    handler: src/handlers/index.getUser
    events:
      - http:
          method: GET
          path: user
          cors: true
  deleteUser:
    handler: src/handlers/index.deleteUser
    events:
      - http:
          method: DELETE
          path: user
          cors: true
  updateUser:
    handler: src/handlers/index.updateUser
    events:
      - http:
          method: PUT
          path: user
          cors: true
  changePassword:
    handler: src/handlers/index.changePassword
    events:
      - http:
          method: PUT
          path: changePassword
          cors: true
  addQuestion:
    handler: src/handlers/index.addQuestion
    events:
      - http:
          method: POST
          path: question
          cors: true
  deleteQuestion:
    handler: src/handlers/index.deleteQuestion
    events:
      - http:
          method: DELETE
          path: question
          cors: true
  getQuestion:
    handler: src/handlers/index.getQuestion
    events:
      - http:
          method: GET
          path: question
          cors: true
  getAllQuestions:
    handler: src/handlers/index.getAllQuestions
    events:
      - http:
          method: GET
          path: questions
          cors: true
  addAnswer:
    handler: src/handlers/index.addAnswer
    events:
      - http:
          method: POST
          path: answer
          cors: true
  deleteAnswer:
    handler: src/handlers/index.deleteAnswer
    events:
      - http:
          method: DELETE
          path: answer
          cors: true
  upVote:
    handler: src/handlers/index.upVote
    events:
      - http:
          method: GET
          path: upvote
          cors: true
  downVote:
    handler: src/handlers/index.downVote
    events:
      - http:
          method: GET
          path: downvote
          cors: true
